{"version":3,"sources":["pages/HomePage.jsx","pages/MoviesPage.jsx","pages/MovieDetailsPage.jsx","pages/Notfoundpages.jsx","components/Cast/Cast.jsx","components/Reviews/Reviews.jsx","App.jsx","index.js"],"names":["HomePage","params","MoviesPage","MovieDetailsPage","Notfoundpages","Cast","Reviews","App","to","path","element","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAAQ,SAASA,EAASC,GAEtB,OACI,0CCKD,SAASC,IACZ,OAEI,6CCHD,SAASC,IACZ,OAEI,mDCVD,SAASC,IACZ,OAEI,gDCED,SAASC,IACZ,OACI,mCACA,wCCGD,SAASC,IACZ,OACI,mCACA,wCCQD,SAASC,IACd,OACE,qCACE,mCACE,cAAC,IAAD,CAAMC,GAAG,IAAT,sBACA,cAAC,IAAD,CAAMA,GAAG,oBAAT,8BACA,cAAC,IAAD,CAAMA,GAAG,UAAT,2BAEF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAACV,EAAD,MACzB,eAAC,IAAD,CAAOS,KAAK,oBAAoBE,UAAU,aAAaD,QAAS,cAACP,EAAD,IAAhE,UACE,cAAC,IAAD,CAAOM,KAAK,OAAOC,QAAS,cAAEL,EAAF,MAC5B,cAAC,IAAD,CAAOI,KAAK,UAAUC,QAAU,cAACJ,EAAD,SAElC,cAAC,IAAD,CAAOG,KAAK,UAAUC,QAAS,cAACR,EAAD,MAC/B,cAAC,IAAD,CAAOO,KAAK,GAAGC,QAAS,cAACN,EAAD,YChChCQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.b8cb279d.chunk.js","sourcesContent":["export  function HomePage(params) {\n    \n    return (\n        <h1>HomePage</h1>\n    )\n};\n\n\n\n\n\n\n\n\n\n\n\n\n// import { Component } from 'react';\n// import './HomeView.scss';\n// import MovieTrends from '../components/MovieTrends';\n// import API from '../services/moviesApi';\n// import Button from '@material-ui/core/Button';\n\n// export default class HomeView extends Component {\n//   state = {\n//     movies: [],\n//     page: 1,\n//     base_url: 'https://image.tmdb.org/t/p/w500',\n//   };\n\n//   async componentDidMount() {\n//     const { page } = this.state;\n\n//     const response = await API.getMovieTrends(page);\n\n//     this.setState({\n//       movies: response.data.results,\n//     });\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     const { movies } = this.state;\n\n//     if (movies.length > 20) {\n//       window.scrollTo({\n//         top: document.documentElement.scrollHeight,\n//         behavior: 'smooth',\n//       });\n//     }\n//   }\n\n//   fetchMovies = page => {\n//     API.getMovieTrends(page).then(response =>\n//       this.setState(prevState => ({\n//         movies: [...prevState.movies, ...response.data.results],\n//         page: prevState.page + 1,\n//       })),\n//     );\n//   };\n\n//   render() {\n//     const { movies, base_url, page } = this.state;\n\n//     return (\n//       <div className=\"HomeView-content\">\n//         <MovieTrends movies={movies} baseUrl={base_url} />\n//         {movies.length > 0 && (\n//           <Button\n//             style={{\n//                 borderRadius: 35,\n//                 backgroundColor: \"#363945\",\n//                 color: 'white',\n//                 padding: \"1px 36px\",\n//                 fontSize: \"18px\"\n//               }}\n//             variant='contained'\n//             onClick={() => this.fetchMovies(page + 1)}\n//           >\n//             More movies\n//           </Button>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n","// import { Component } from 'react';\n// import MoviesPageQuery from '../components/MoviesPageQuery';\n// import API from '../services/moviesApi';\n// import SearchBar from '../components/SearchBar';\n// import queryString from 'query-string';\n// import Button from '@material-ui/core/Button';\n\n\nexport function MoviesPage ()  {\n    return (\n      \n        <h2> MoviesPage</h2>\n  )  \n};\n\n\n\n\n// class MoviesPage extends Component {\n//   state = {\n//     query: '',\n//     movies: [],\n//     page: 1,\n//     base_url: 'https://image.tmdb.org/t/p/w500',\n//   };\n\n//   componentDidMount = () => {\n//     const { query } = this.getQueryFromProps(this.props);\n\n//     if (query) {\n//       this.setState({ query });\n//     }\n//   };\n\n//   componentDidUpdate(prevProps, prevState) {\n//     const { query, movies } = this.state;\n\n//     if (prevState.query !== query) {\n//       this.fetchMovies();\n\n//       this.props.history.push({ search: `query=${query}` });\n//     }\n\n//     if (movies.length > 20) {\n//       window.scrollTo({\n//         top: document.documentElement.scrollHeight,\n//         behavior: 'smooth',\n//       });\n//     }\n//   }\n\n//   async fetchMovies() {\n//     const { query, page } = this.state;\n//     const option = {\n//       query,\n//       page,\n//     };\n\n//     API.getMovieByQuery(option).then(data => {\n//       this.setState(prevState => ({\n//         movies: [...prevState.movies, ...data],\n//         page: prevState.page + 1,\n//       }));\n//     });\n//   }\n\n//   onChangeQuery = query => {\n//     this.setState({\n//       query,\n//       movies: [],\n//       page: 1,\n//     });\n//   };\n//   onBtnClickUp = () => {\n//     window.scrollTo({\n//       top: 0,\n//       behavior: 'smooth',\n//     });\n//   };\n\n//   getQueryFromProps = props => queryString.parse(props.location.search);\n\n//   render() {\n//     const { movies, base_url, page } = this.state;\n\n//     return (\n//       <div className=\"Movies-container\">\n//         <SearchBar onSubmit={this.onChangeQuery} />\n//         {movies && <MoviesPageQuery movies={movies} baseUrl={base_url} />}\n//         {movies.length > 0 && (\n//           <div>\n//             <Button\n//               variant=\"contained\"\n//               color=\"primary\"\n//               onClick={() => this.fetchMovies(page + 1)}\n//             >\n//               More movies\n//             </Button>\n\n//             <Button\n//               variant=\"contained\"\n//               color=\"primary\"\n//               onClick={this.onBtnClickUp}\n//             >\n//               UP\n//             </Button>\n//           </div>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n\n// export default MoviesPage;\n","// import { Component, Suspense, lazy } from 'react';\n// import { Route, NavLink } from 'react-router-dom';\n// import MovieDetails from '../components/MovieDetails';\n// import routes from '../routes';\n// import './MovieDetailsPage.scss';\n// import API from '../services/moviesApi';\n// import Loader from 'react-loader-spinner';\n\nexport function MovieDetailsPage ()  {\n    return (\n      \n        <h2> MovieDetailsPage</h2>\n  )  \n};\n\n\n\n\n\n// const Cast = lazy(() =>\n//   import('../components/Cast' /* webpackChunkName: \"cast-view\" */),\n// );\n// const Reviews = lazy(() =>\n//   import('../components/Reviews' /* webpackChunkName: \"reviews-view\" */),\n// );\n\n// export default class MovieDetailsPage extends Component {\n//   state = {\n//     id: null,\n//     original_title: null,\n//     overview: null,\n//     imdb_id: null,\n//     genres: null,\n//     poster_path: null,\n//     release_date: null,\n//     vote_count: null,\n//     vote_average: null,\n//     budget: null,\n//     revenue: null,\n//     tagline: null,\n//     base_url: 'https://image.tmdb.org/t/p/w500',\n//   };\n\n//   async componentDidMount() {\n//     const movieId = this.props.match.params.movieId;\n\n//     const response = await API.getMoviesDetail(movieId);\n\n//     this.setState({\n//       ...response.data,\n//     });\n//   }\n\n//   handleGoBack = () => {\n//     const { location, history } = this.props;\n\n//     history.push(location?.state?.from || routes.home);\n//   };\n\n//   render() {\n//     const { match } = this.props;\n\n//     const movieId = Number(match.params.movieId);\n\n//     const { from } = this?.props?.location?.state || {\n//       from: { pathname: routes.home },\n//     };\n\n//     const {\n//       release_date,\n//       budget,\n//       original_title,\n//       tagline,\n//       vote_average,\n//       vote_count,\n//       overview,\n//       genres,\n//       poster_path,\n//       base_url,\n//       revenue,\n//       popularity,\n//     } = this.state;\n\n//     return (\n//       <div className=\"MovieDetailsPage-container\">\n//         <button\n//           className=\"MovieDetails-button\"\n//           type=\"button\"\n//           onClick={this.handleGoBack}\n//         >\n//           {'<< Previous page'}\n//         </button>\n\n//         {original_title && (\n//           <MovieDetails\n//             title={original_title}\n//             date={release_date}\n//             votea={vote_average}\n//             votec={vote_count}\n//             desc={overview}\n//             genres={genres}\n//             url={poster_path}\n//             baseUrl={base_url}\n//             budget={budget}\n//             revenue={revenue}\n//             tag={tagline}\n//             popularity={popularity}\n//           />\n//         )}\n\n//         <ul className=\"MovieCast-list\">\n//           <li className=\"MovieCast-item\">\n//             <NavLink\n//               exact\n//               to={{\n//                 pathname: `${match.url}/cast`,\n//                 state: {\n//                   from: from,\n//                 },\n//               }}\n//               className=\"MovieDetails-link\"\n//               activeClassName=\"MovieDetails-link--active\"\n//             >\n//               Cast\n//             </NavLink>\n//           </li>\n//           <li className=\"MovieCast-item\">\n//             <NavLink\n//               to={{\n//                 pathname: `${match.url}/review`,\n//                 state: {\n//                   from: from,\n//                 },\n//               }}\n//               className=\"MovieDetails-link\"\n//               activeClassName=\"MovieDetails-link--active\"\n//             >\n//               Review\n//             </NavLink>\n//           </li>\n//         </ul>\n\n//         <Suspense\n//           fallback={\n//             <Loader type=\"Audio\" color=\"#00BFFF\" height={80} width={80} />\n//           }\n//         >\n//           <Route\n//             path={`${match.path}/cast`}\n//             render={() => <Cast id={movieId} />}\n//           />\n//           <Route\n//             path={`${match.path}/review`}\n//             render={() => <Reviews id={movieId} />}\n//           />\n//         </Suspense>\n//       </div>\n//     );\n//   }\n// }\n","\r\nexport function Notfoundpages ()  {\r\n    return (\r\n      \r\n        <h2> Notfoundpages</h2>\r\n  )  \r\n};\r\n","// import { Component } from 'react';\n// import API from '../../services/moviesApi';\n// import PropTypes from 'prop-types';\n// import './Cast.scss';\n// import defaultImage from '../../img/default.png';\n\nexport function Cast() {\n    return (\n        <>\n        <h2>Cast</h2>\n\n\n        </>\n\n    )\n    \n};\n\n\n\n\n// export default class Cast extends Component {\n//   state = {\n//     cast: null,\n\n//     base_url: 'https://image.tmdb.org/t/p/w500',\n//   };\n\n//   async componentDidMount() {\n//     const movieId = this.props.id;\n\n//     const response = await API.getMovieCast(movieId);\n\n//     this.setState({ cast: response.data.cast });\n//   }\n\n//   render() {\n//     const { cast, base_url } = this.state;\n\n//     return (\n//       <div className=\"Cast-container\">\n//         <ul className=\"CastList\">\n//           {cast &&\n//             cast.map(({ id, name, character, profile_path }) => (\n//               <li className=\"CastList-item\" key={id}>\n//                 <img\n//                   src={\n//                     profile_path ? `${base_url}${profile_path}` : defaultImage\n//                   }\n//                   alt={name}\n//                 />\n\n//                 <div className=\"Cast-text-container\">\n//                   <p className=\"Cast-name\">{name}</p>\n//                   <span className=\"Cast-text\">Character: {character}</span>\n//                 </div>\n//               </li>\n//             ))}\n//         </ul>\n//       </div>\n//     );\n//   }\n// }\n\n// Cast.defaultProps = {\n//   profile_path: defaultImage,\n//   name: 'Unknown',\n//   character: 'Unknown',\n// };\n\n// Cast.propTypes = {\n//   id: PropTypes.number,\n//   name: PropTypes.string,\n//   character: PropTypes.string,\n//   profile_path: PropTypes.string,\n// };\n","// import { Component } from 'react';\n// import API from '../../services/moviesApi';\n\n// import PropTypes from 'prop-types';\n// import './Reviews.scss';\n\n\n\n\n\n\n\nexport function Reviews() {\n    return (\n        <>\n        <h2>Cast</h2>\n\n\n        </>\n\n    )\n    \n};\n\n// export default class Reviews extends Component {\n//   state = {\n//     reviews: null,\n//   };\n\n//   async componentDidMount() {\n//     const movieId = this.props.id;\n//     this.setState({ isLoaded: true });\n\n//     const response = await API.getMovieReview(movieId);\n\n//     this.setState({ reviews: response.data.results });\n//   }\n\n//   render() {\n//     const { reviews } = this.state;\n\n//     return (\n//       <div className=\"Reviews-container \">\n//         <ul className=\"ReviewsList\">\n//           {reviews && reviews.length > 0\n//             ? reviews.map(({ id, author, content, url }) => (\n//                 <li className=\"Reviews-item\" key={id}>\n//                   <h3 className=\"Reviews-title\">Author: {author}</h3>\n\n//                   <p className=\"Reviews-text\">{content.slice(0, 730)}...</p>\n\n//                   <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n//                     Read full review\n//                   </a>\n//                 </li>\n//               ))\n//             : \"We don't have any reviews for this movie\"}\n//         </ul>\n//       </div>\n//     );\n//   }\n// }\n\n// Reviews.defaultProps = {\n//   author: 'Unknown',\n// };\n\n// Reviews.propTypes = {\n//   id: PropTypes.number,\n//   author: PropTypes.string,\n//   content: PropTypes.string,\n//   url: PropTypes.string,\n// };\n","import './App.scss';\n// import { Suspense, lazy } from 'react';\nimport { Routes, Route, Link } from 'react-router-dom';\nimport { HomePage } from './pages/HomePage';\nimport { MoviesPage } from \"./pages/MoviesPage\";\nimport { MovieDetailsPage } from './pages/MovieDetailsPage';\nimport { Notfoundpages } from './pages/Notfoundpages';\nimport { Cast } from './components/Cast/Cast';\nimport { Reviews} from './components/Reviews/Reviews'\n\n// import routes from './routes';\n// import AppBar from './components/AppBar';\n// import Loader from 'react-loader-spinner';\n// const HomeView = lazy(() =>\n//   import('./views/HomeView.jsx' /* webpackChunkName: \"home-page\" */),\n// );\n// const MoviesDetailView = lazy(() =>\n//   import('./views/MovieDetailsPage.jsx' /* webpackChunkName: \"movie-details\" */),\n// );\n// const MoviesPage = lazy(() =>\n//   import('./views/MoviesPage.jsx' /* webpackChunkName: \"movies-page\" */),\n// );\n\nexport function App() {\n  return (\n    <>\n      <header>\n        <Link to=\"/\">HomePage</Link>\n        <Link to='/movies/:movieId/'>MovieDetailsPage</Link>\n        <Link to='/movies'>MoviesPage</Link>\n      </header>\n      <Routes>\n        <Route path=\"/\" element={<HomePage/> }   />\n        <Route path='/movies/:movieId/' className=\"activeLink\" element={<MovieDetailsPage />} >\n          <Route path=\"cast\" element={< Cast/>} />\n          <Route path=\"reviews\" element={ <Reviews/>} />\n        </Route>\n        <Route path='/movies' element={<MoviesPage />} />\n        <Route path=\"\" element={<Notfoundpages/> }   />\n      </Routes>\n\n\n    </>\n  )\n };\n\n// {/* <AppBar />\n// <Suspense\n//   fallback={<Loader type=\"Audio\" color=\"#00BFFF\" height={80} width={80} />}\n// >\n//   <Switch>\n//     <Route exact path={routes.home} component={HomeView} />\n\n//     <Route path={routes.movieId} component={MoviesDetailView} />\n\n//     <Route path={routes.movies} component={MoviesPage} />\n//   </Switch>\n// </Suspense> */}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport {App} from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
{"version":3,"sources":["pages/HomePage.jsx","components/Reviews/Reviews.jsx","components/Cast/Cast.jsx","components/SearchBar/SearchBar.jsx","pages/MoviesPage.jsx","pages/MovieDetailsPage.jsx","pages/Notfoundpages.jsx","components/Navigation/Navigation.jsx","App.jsx","index.js","components/Navigation/Navigation.module.css","components/SearchBar/SearchBar.module.css"],"names":["HomePage","params","Reviews","Cast","SearchBar","onSubmit","useState","value","setValue","className","e","preventDefault","console","log","trim","toLowerCase","s","searchForm__input","type","onChange","target","placeholder","searchForm__button","MoviesPage","to","element","MovieDetailsPage","Notfoundpages","Navigation","setActive","color","isActive","nav","nav__list","nav__item","style","container","App","path","index","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"2PAAQ,SAASA,EAASC,GAEtB,OACI,0CCSD,SAASC,IACZ,OACI,mCACA,wCCRD,SAASC,IACd,OACE,mCACE,wC,kCCRS,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAWA,OACE,wBAAQC,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaJ,SAXX,SAACK,GACrBA,EAAEC,iBACFC,QAAQC,IAAI,yFAAoBN,GAChCF,EAASE,EAAMO,OAAOC,eACtBP,EAAS,KAOP,UACE,uBACEC,UAAWO,IAAEC,kBACbC,KAAK,OACLC,SATc,SAACT,GACrBF,EAASE,EAAEU,OAAOb,QASZA,MAAOA,EAGPc,YAAY,kBACX,IACH,wBAAQH,KAAK,SAAST,UAAWO,IAAEM,mBAAnC,SACE,sBAAMb,UAAU,0BAAhB,2BCjBH,SAASc,IACd,OACE,qCACE,cAACnB,EAAD,IACA,6CACA,+BACE,6BACE,cAAC,IAAD,CAAMoB,GAAG,OAAT,oBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,UAAT,0BAOJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOA,GAAG,QAAQC,QAAS,cAACtB,EAAD,MAC3B,cAAC,IAAD,CAAOqB,GAAG,WAAWC,QAAS,cAACvB,EAAD,SAGhC,cAAC,IAAD,OCxBC,SAASwB,IACd,OACE,mCACE,qDCVC,SAASC,IACZ,OAEI,gD,oBCWD,SAASC,IAEd,IAAMC,EAAY,SAAC,GAAD,MAAmB,CAAEC,MAArB,EAAGC,SAAoC,OAAS,UAClE,OACE,qCACE,qBAAKtB,UAAWO,IAAEgB,IAAlB,SACE,qBAAIvB,UAAWO,IAAEiB,UAAjB,UACE,oBAAIxB,UAAWO,IAAEkB,UAAjB,SACE,cAAC,IAAD,CAASV,GAAG,IAAIW,MAAON,EAAvB,oBASF,oBAAIpB,UAAWO,IAAEkB,UAAjB,SACE,cAAC,IAAD,CAASV,GAAG,UAAUW,MAAON,EAA7B,2BAMN,sBAAMpB,UAAWO,IAAEoB,UAAnB,SACE,cAAC,IAAD,SCjBD,SAASC,IACd,OACE,mCAIE,eAAC,IAAD,WACE,eAAC,IAAD,CAAOC,KAAK,IAAIb,QAAS,cAACG,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOW,OAAK,EAACd,QAAS,cAACzB,EAAD,MAEtB,cAAC,IAAD,CAAOsC,KAAK,WAAWb,QAAS,cAACF,EAAD,MAEhC,cAAC,IAAD,CACEe,KAAK,aACL7B,UAAU,aACVgB,QAAS,cAACC,EAAD,SAOb,cAAC,IAAD,CAAOY,KAAK,GAAGb,QAAS,cAACE,EAAD,WCvChCa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,U,kBCX1BC,EAAOC,QAAU,CAAC,IAAM,wBAAwB,UAAY,8BAA8B,UAAY,8BAA8B,cAAc,kC,kBCAlJD,EAAOC,QAAU,CAAC,kBAAoB,qCAAqC,mBAAqB,yC","file":"static/js/main.c652be96.chunk.js","sourcesContent":["export  function HomePage(params) {\r\n    \r\n    return (\r\n        <h1>HomePage</h1>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { Component } from 'react';\r\n// import './HomeView.scss';\r\n// import MovieTrends from '../components/MovieTrends';\r\n// import API from '../services/moviesApi';\r\n// import Button from '@material-ui/core/Button';\r\n\r\n// export default class HomeView extends Component {\r\n//   state = {\r\n//     movies: [],\r\n//     page: 1,\r\n//     base_url: 'https://image.tmdb.org/t/p/w500',\r\n//   };\r\n\r\n//   async componentDidMount() {\r\n//     const { page } = this.state;\r\n\r\n//     const response = await API.getMovieTrends(page);\r\n\r\n//     this.setState({\r\n//       movies: response.data.results,\r\n//     });\r\n//   }\r\n\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     const { movies } = this.state;\r\n\r\n//     if (movies.length > 20) {\r\n//       window.scrollTo({\r\n//         top: document.documentElement.scrollHeight,\r\n//         behavior: 'smooth',\r\n//       });\r\n//     }\r\n//   }\r\n\r\n//   fetchMovies = page => {\r\n//     API.getMovieTrends(page).then(response =>\r\n//       this.setState(prevState => ({\r\n//         movies: [...prevState.movies, ...response.data.results],\r\n//         page: prevState.page + 1,\r\n//       })),\r\n//     );\r\n//   };\r\n\r\n//   render() {\r\n//     const { movies, base_url, page } = this.state;\r\n\r\n//     return (\r\n//       <div className=\"HomeView-content\">\r\n//         <MovieTrends movies={movies} baseUrl={base_url} />\r\n//         {movies.length > 0 && (\r\n//           <Button\r\n//             style={{\r\n//                 borderRadius: 35,\r\n//                 backgroundColor: \"#363945\",\r\n//                 color: 'white',\r\n//                 padding: \"1px 36px\",\r\n//                 fontSize: \"18px\"\r\n//               }}\r\n//             variant='contained'\r\n//             onClick={() => this.fetchMovies(page + 1)}\r\n//           >\r\n//             More movies\r\n//           </Button>\r\n//         )}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n","// import { Component } from 'react';\r\n// import API from '../../services/moviesApi';\r\n\r\n// import PropTypes from 'prop-types';\r\n// import './Reviews.scss';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function Reviews() {\r\n    return (\r\n        <>\r\n        <h2>Cast</h2>\r\n\r\n\r\n        </>\r\n\r\n    )\r\n    \r\n};\r\n\r\n// export default class Reviews extends Component {\r\n//   state = {\r\n//     reviews: null,\r\n//   };\r\n\r\n//   async componentDidMount() {\r\n//     const movieId = this.props.id;\r\n//     this.setState({ isLoaded: true });\r\n\r\n//     const response = await API.getMovieReview(movieId);\r\n\r\n//     this.setState({ reviews: response.data.results });\r\n//   }\r\n\r\n//   render() {\r\n//     const { reviews } = this.state;\r\n\r\n//     return (\r\n//       <div className=\"Reviews-container \">\r\n//         <ul className=\"ReviewsList\">\r\n//           {reviews && reviews.length > 0\r\n//             ? reviews.map(({ id, author, content, url }) => (\r\n//                 <li className=\"Reviews-item\" key={id}>\r\n//                   <h3 className=\"Reviews-title\">Author: {author}</h3>\r\n\r\n//                   <p className=\"Reviews-text\">{content.slice(0, 730)}...</p>\r\n\r\n//                   <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n//                     Read full review\r\n//                   </a>\r\n//                 </li>\r\n//               ))\r\n//             : \"We don't have any reviews for this movie\"}\r\n//         </ul>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// Reviews.defaultProps = {\r\n//   author: 'Unknown',\r\n// };\r\n\r\n// Reviews.propTypes = {\r\n//   id: PropTypes.number,\r\n//   author: PropTypes.string,\r\n//   content: PropTypes.string,\r\n//   url: PropTypes.string,\r\n// };\r\n","// import { Component } from 'react';\r\n// import API from '../../services/moviesApi';\r\n// import PropTypes from 'prop-types';\r\n// import './Cast.scss';\r\n// import defaultImage from '../../img/default.png';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport function Cast() {\r\n  return (\r\n    <>\r\n      <h2>Cast</h2>\r\n    </>\r\n  );\r\n}\r\n\r\n// export default class Cast extends Component {\r\n//   state = {\r\n//     cast: null,\r\n\r\n//     base_url: 'https://image.tmdb.org/t/p/w500',\r\n//   };\r\n\r\n//   async componentDidMount() {\r\n//     const movieId = this.props.id;\r\n\r\n//     const response = await API.getMovieCast(movieId);\r\n\r\n//     this.setState({ cast: response.data.cast });\r\n//   }\r\n\r\n//   render() {\r\n//     const { cast, base_url } = this.state;\r\n\r\n//     return (\r\n//       <div className=\"Cast-container\">\r\n//         <ul className=\"CastList\">\r\n//           {cast &&\r\n//             cast.map(({ id, name, character, profile_path }) => (\r\n//               <li className=\"CastList-item\" key={id}>\r\n//                 <img\r\n//                   src={\r\n//                     profile_path ? `${base_url}${profile_path}` : defaultImage\r\n//                   }\r\n//                   alt={name}\r\n//                 />\r\n\r\n//                 <div className=\"Cast-text-container\">\r\n//                   <p className=\"Cast-name\">{name}</p>\r\n//                   <span className=\"Cast-text\">Character: {character}</span>\r\n//                 </div>\r\n//               </li>\r\n//             ))}\r\n//         </ul>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// Cast.defaultProps = {\r\n//   profile_path: defaultImage,\r\n//   name: 'Unknown',\r\n//   character: 'Unknown',\r\n// };\r\n\r\n// Cast.propTypes = {\r\n//   id: PropTypes.number,\r\n//   name: PropTypes.string,\r\n//   character: PropTypes.string,\r\n//   profile_path: PropTypes.string,\r\n// };\r\n","import { React, useState } from \"react\";\r\nimport s from \"./SearchBar.module.css\";\r\nexport default function SearchBar({ onSubmit }) {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const SubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(\" перед отправкой\", value);\r\n    onSubmit(value.trim().toLowerCase());\r\n    setValue(\"\");\r\n  };\r\n  const changeHandler = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={SubmitHandler}>\r\n        <input\r\n          className={s.searchForm__input}\r\n          type=\"text\"\r\n          onChange={changeHandler}\r\n          value={value}\r\n          //   autocomplete=\"off\"\r\n          //   autofocus\r\n          placeholder=\"Search movies\"\r\n        />{\" \"}\r\n        <button type=\"submit\" className={s.searchForm__button}>\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\n// import { Component } from 'react';\r\n// import './SearchBar.scss';\r\n\r\n// export default class SearchBar extends Component {\r\n//   state = {\r\n//     query: '',\r\n//   };\r\n\r\n//   handleInput = e => {\r\n//     this.setState({\r\n//       query: e.target.value,\r\n//     });\r\n//   };\r\n\r\n//   handleSubmit = e => {\r\n//     const { query } = this.state;\r\n//     e.preventDefault();\r\n\r\n//     this.props.onSubmit(query);\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <>\r\n//         <form onSubmit={this.handleSubmit} className=\"MoviesPage-form\">\r\n//           <input\r\n//             className=\"MoviesPage-input\"\r\n//             type=\"text\"\r\n//             value={this.state.query}\r\n//             onChange={this.handleInput}\r\n//             placeholder=\"Search movie\"\r\n//           ></input>\r\n//           <button className=\"MoviesPage-button\" type=\"submit\">\r\n//             Search\r\n//           </button>\r\n//         </form>\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n","// import { Component } from 'react';\r\n// import MoviesPageQuery from '../components/MoviesPageQuery';\r\n// import API from '../services/moviesApi';\r\n// import SearchBar from '../components/SearchBar';\r\n// import queryString from 'query-string';\r\n// import Button from '@material-ui/core/Button';\r\nimport { Reviews } from \"../components/Reviews/Reviews\";\r\nimport { Cast } from \"../components/Cast/Cast\";\r\nimport { Link, Outlet, Routes, Route } from \"react-router-dom\";\r\nimport SearchBar from \"../components/SearchBar/SearchBar\";\r\nexport function MoviesPage() {\r\n  return (\r\n    <>\r\n      <SearchBar />\r\n      <h2> MoviesPage</h2>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"cast\">cast</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"reviews\">reviews</Link>\r\n        </li>\r\n      </ul>\r\n      {/* <Routes>\r\n          <Route path=\":cast\" element={<Cast />} />\r\n          <Route path=\":reviews\" element={<Reviews />}\r\n        </Routes>  */}\r\n      <Routes>\r\n        <Route to=\":cast\" element={<Cast />} />\r\n        <Route to=\":reviews\" element={<Reviews />} />\r\n      </Routes>\r\n\r\n      <Outlet />\r\n    </>\r\n  );\r\n}\r\n\r\n// class MoviesPage extends Component {\r\n//   state = {\r\n//     query: '',\r\n//     movies: [],\r\n//     page: 1,\r\n//     base_url: 'https://image.tmdb.org/t/p/w500',\r\n//   };\r\n\r\n//   componentDidMount = () => {\r\n//     const { query } = this.getQueryFromProps(this.props);\r\n\r\n//     if (query) {\r\n//       this.setState({ query });\r\n//     }\r\n//   };\r\n\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     const { query, movies } = this.state;\r\n\r\n//     if (prevState.query !== query) {\r\n//       this.fetchMovies();\r\n\r\n//       this.props.history.push({ search: `query=${query}` });\r\n//     }\r\n\r\n//     if (movies.length > 20) {\r\n//       window.scrollTo({\r\n//         top: document.documentElement.scrollHeight,\r\n//         behavior: 'smooth',\r\n//       });\r\n//     }\r\n//   }\r\n\r\n//   async fetchMovies() {\r\n//     const { query, page } = this.state;\r\n//     const option = {\r\n//       query,\r\n//       page,\r\n//     };\r\n\r\n//     API.getMovieByQuery(option).then(data => {\r\n//       this.setState(prevState => ({\r\n//         movies: [...prevState.movies, ...data],\r\n//         page: prevState.page + 1,\r\n//       }));\r\n//     });\r\n//   }\r\n\r\n//   onChangeQuery = query => {\r\n//     this.setState({\r\n//       query,\r\n//       movies: [],\r\n//       page: 1,\r\n//     });\r\n//   };\r\n//   onBtnClickUp = () => {\r\n//     window.scrollTo({\r\n//       top: 0,\r\n//       behavior: 'smooth',\r\n//     });\r\n//   };\r\n\r\n//   getQueryFromProps = props => queryString.parse(props.location.search);\r\n\r\n//   render() {\r\n//     const { movies, base_url, page } = this.state;\r\n\r\n//     return (\r\n//       <div className=\"Movies-container\">\r\n//         <SearchBar onSubmit={this.onChangeQuery} />\r\n//         {movies && <MoviesPageQuery movies={movies} baseUrl={base_url} />}\r\n//         {movies.length > 0 && (\r\n//           <div>\r\n//             <Button\r\n//               variant=\"contained\"\r\n//               color=\"primary\"\r\n//               onClick={() => this.fetchMovies(page + 1)}\r\n//             >\r\n//               More movies\r\n//             </Button>\r\n\r\n//             <Button\r\n//               variant=\"contained\"\r\n//               color=\"primary\"\r\n//               onClick={this.onBtnClickUp}\r\n//             >\r\n//               UP\r\n//             </Button>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default MoviesPage;\r\n","// import { Component, Suspense, lazy } from 'react';\r\n// import { Route, NavLink } from 'react-router-dom';\r\n// import MovieDetails from '../components/MovieDetails';\r\n// import routes from '../routes';\r\n// import './MovieDetailsPage.scss';\r\n// import API from '../services/moviesApi';\r\n// import Loader from 'react-loader-spinner';\r\n\r\nexport function MovieDetailsPage() {\r\n  return (\r\n    <>\r\n      <h2> MovieDetailsPage</h2>\r\n    </>\r\n  );\r\n}\r\n\r\n{\r\n  /* <Routes>\r\n          <Route path=\":cast\" element={<Cast />} />\r\n          <Route path=\":reviews\" element={<Reviews />}\r\n        </Routes> */\r\n}\r\n\r\n// const Cast = lazy(() =>\r\n//   import('../components/Cast' /* webpackChunkName: \"cast-view\" */),\r\n// );\r\n// const Reviews = lazy(() =>\r\n//   import('../components/Reviews' /* webpackChunkName: \"reviews-view\" */),\r\n// );\r\n\r\n// export default class MovieDetailsPage extends Component {\r\n//   state = {\r\n//     id: null,\r\n//     original_title: null,\r\n//     overview: null,\r\n//     imdb_id: null,\r\n//     genres: null,\r\n//     poster_path: null,\r\n//     release_date: null,\r\n//     vote_count: null,\r\n//     vote_average: null,\r\n//     budget: null,\r\n//     revenue: null,\r\n//     tagline: null,\r\n//     base_url: 'https://image.tmdb.org/t/p/w500',\r\n//   };\r\n\r\n//   async componentDidMount() {\r\n//     const movieId = this.props.match.params.movieId;\r\n\r\n//     const response = await API.getMoviesDetail(movieId);\r\n\r\n//     this.setState({\r\n//       ...response.data,\r\n//     });\r\n//   }\r\n\r\n//   handleGoBack = () => {\r\n//     const { location, history } = this.props;\r\n\r\n//     history.push(location?.state?.from || routes.home);\r\n//   };\r\n\r\n//   render() {\r\n//     const { match } = this.props;\r\n\r\n//     const movieId = Number(match.params.movieId);\r\n\r\n//     const { from } = this?.props?.location?.state || {\r\n//       from: { pathname: routes.home },\r\n//     };\r\n\r\n//     const {\r\n//       release_date,\r\n//       budget,\r\n//       original_title,\r\n//       tagline,\r\n//       vote_average,\r\n//       vote_count,\r\n//       overview,\r\n//       genres,\r\n//       poster_path,\r\n//       base_url,\r\n//       revenue,\r\n//       popularity,\r\n//     } = this.state;\r\n\r\n//     return (\r\n//       <div className=\"MovieDetailsPage-container\">\r\n//         <button\r\n//           className=\"MovieDetails-button\"\r\n//           type=\"button\"\r\n//           onClick={this.handleGoBack}\r\n//         >\r\n//           {'<< Previous page'}\r\n//         </button>\r\n\r\n//         {original_title && (\r\n//           <MovieDetails\r\n//             title={original_title}\r\n//             date={release_date}\r\n//             votea={vote_average}\r\n//             votec={vote_count}\r\n//             desc={overview}\r\n//             genres={genres}\r\n//             url={poster_path}\r\n//             baseUrl={base_url}\r\n//             budget={budget}\r\n//             revenue={revenue}\r\n//             tag={tagline}\r\n//             popularity={popularity}\r\n//           />\r\n//         )}\r\n\r\n//         <ul className=\"MovieCast-list\">\r\n//           <li className=\"MovieCast-item\">\r\n//             <NavLink\r\n//               exact\r\n//               to={{\r\n//                 pathname: `${match.url}/cast`,\r\n//                 state: {\r\n//                   from: from,\r\n//                 },\r\n//               }}\r\n//               className=\"MovieDetails-link\"\r\n//               activeClassName=\"MovieDetails-link--active\"\r\n//             >\r\n//               Cast\r\n//             </NavLink>\r\n//           </li>\r\n//           <li className=\"MovieCast-item\">\r\n//             <NavLink\r\n//               to={{\r\n//                 pathname: `${match.url}/review`,\r\n//                 state: {\r\n//                   from: from,\r\n//                 },\r\n//               }}\r\n//               className=\"MovieDetails-link\"\r\n//               activeClassName=\"MovieDetails-link--active\"\r\n//             >\r\n//               Review\r\n//             </NavLink>\r\n//           </li>\r\n//         </ul>\r\n\r\n//         <Suspense\r\n//           fallback={\r\n//             <Loader type=\"Audio\" color=\"#00BFFF\" height={80} width={80} />\r\n//           }\r\n//         >\r\n//           <Route\r\n//             path={`${match.path}/cast`}\r\n//             render={() => <Cast id={movieId} />}\r\n//           />\r\n//           <Route\r\n//             path={`${match.path}/review`}\r\n//             render={() => <Reviews id={movieId} />}\r\n//           />\r\n//         </Suspense>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n","\r\nexport function Notfoundpages ()  {\r\n    return (\r\n      \r\n        <h2> Notfoundpages</h2>\r\n  )  \r\n};\r\n","// import { NavLink } from 'react-router-dom';\r\nimport { NavLink, Outlet } from \"react-router-dom\";\r\nimport s from \"./Navigation.module.css\";\r\n// import routes from '../../routes';\r\n// import { Button } from '@material-ui/core';\r\n// // import { ThemeProvider, createTheme } from '@material-ui/core/styles';\r\n\r\n// // const theme = createTheme({\r\n// //   palette: {\r\n// //     neutral: {\r\n// //       main: '#ff0000', // цвет кнопки менять тут\r\n// //       contrastText: '#000000' //цвет текста тут\r\n// //     }\r\n// // }\r\n// // });\r\nexport function Navigation() {\r\n  //   const setActive = ({ isActive }) => (isActive ? \"active-link\" : \"\");\r\n  const setActive = ({ isActive }) => ({ color: isActive ? \"blue\" : \"black\" });\r\n  return (\r\n    <>\r\n      <nav className={s.nav}>\r\n        <ul className={s.nav__list}>\r\n          <li className={s.nav__item}>\r\n            <NavLink to=\"/\" style={setActive}>\r\n              Home\r\n            </NavLink>\r\n          </li>\r\n          {/* <li className={s.nav__item}>\r\n          <NavLink to=\"/movies/:movieId/\" style={setActive}>\r\n            MovieDetailsPage\r\n          </NavLink>\r\n        </li> */}\r\n          <li className={s.nav__item}>\r\n            <NavLink to=\"/movies\" style={setActive}>\r\n              Movies\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <main className={s.container}>\r\n        <Outlet />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\n// const Navigation = () => {\r\n//   return (\r\n//     // <ThemeProvider theme={theme}>\r\n//     <div className=\"Header\">\r\n//       <ul className=\"NavList\">\r\n//         <li>\r\n//           <NavLink\r\n//             exact\r\n//             to={routes.home}\r\n//             className=\"NavLink\"\r\n//             activeClassName=\"NavLink--active\"\r\n//           >\r\n//             <Button\r\n//               style={{\r\n//                 borderRadius: 35,\r\n//                 backgroundColor: \"#21b6ae\",\r\n//                 padding: \"1px 36px\",\r\n//                 fontSize: \"18px\"\r\n//               }}\r\n//               variant='contained'\r\n//             >\r\n//               Home\r\n//             </Button>\r\n//           </NavLink>\r\n//         </li>\r\n//         <li>\r\n//           <NavLink\r\n//             to={routes.movies}\r\n//             className=\"NavLink\"\r\n//             activeClassName=\"NavLink--active\"\r\n//           >\r\n//             <Button\r\n//             style={{\r\n//                 borderRadius: 35,\r\n//                 backgroundColor: \"#21b6ae\",\r\n//                 padding: \"1px 36px\",\r\n//                 fontSize: \"18px\"\r\n//               }}\r\n//               variant='contained'>\r\n//               Movies\r\n//             </Button>\r\n//           </NavLink>\r\n//         </li>\r\n//       </ul>\r\n//       </div>\r\n//       // </ThemeProvider>\r\n//   );\r\n// };\r\n\r\n// export default Navigation;\r\n","import \"./App.scss\";\r\n// import { Suspense, lazy } from 'react';\r\nimport { Routes, Route, Link } from \"react-router-dom\";\r\nimport { HomePage } from \"./pages/HomePage\";\r\nimport { MoviesPage } from \"./pages/MoviesPage\";\r\nimport { MovieDetailsPage } from \"./pages/MovieDetailsPage\";\r\nimport { Notfoundpages } from \"./pages/Notfoundpages\";\r\nimport { Cast } from \"./components/Cast/Cast\";\r\nimport { Reviews } from \"./components/Reviews/Reviews\";\r\nimport { Navigation } from \"./components/Navigation/Navigation\";\r\n// import routes from './routes';\r\n// import AppBar from './components/AppBar';\r\n// import Loader from 'react-loader-spinner';\r\n// const HomeView = lazy(() =>\r\n//   import('./views/HomeView.jsx' /* webpackChunkName: \"home-page\" */),\r\n// );\r\n// const MoviesDetailView = lazy(() =>\r\n//   import('./views/MovieDetailsPage.jsx' /* webpackChunkName: \"movie-details\" */),\r\n// );\r\n// const MoviesPage = lazy(() =>\r\n//   import('./views/MoviesPage.jsx' /* webpackChunkName: \"movies-page\" */),\r\n// );\r\n\r\nexport function App() {\r\n  return (\r\n    <>\r\n      {/* <header>\r\n        <Navigation />\r\n      </header> */}\r\n      <Routes>\r\n        <Route path=\"/\" element={<Navigation />}>\r\n          <Route index element={<HomePage />} />\r\n\r\n          <Route path=\"movies/*\" element={<MoviesPage />} />\r\n\r\n          <Route\r\n            path=\":movieId/*\"\r\n            className=\"activeLink\"\r\n            element={<MovieDetailsPage />}\r\n          />\r\n          {/* <Route path=\"cast\" element={<Cast />} />\r\n            <Route path=\"reviews\" element={<Reviews />} />\r\n          </Route> */}\r\n        </Route>\r\n\r\n        <Route path=\"\" element={<Notfoundpages />} />\r\n      </Routes>\r\n    </>\r\n  );\r\n}\r\n\r\n// {/* <AppBar />\r\n// <Suspense\r\n//   fallback={<Loader type=\"Audio\" color=\"#00BFFF\" height={80} width={80} />}\r\n// >\r\n//   <Switch>\r\n//     <Route exact path={routes.home} component={HomeView} />\r\n\r\n//     <Route path={routes.movieId} component={MoviesDetailView} />\r\n\r\n//     <Route path={routes.movies} component={MoviesPage} />\r\n//   </Switch>\r\n// </Suspense> */}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport {App} from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__3AsRk\",\"nav__list\":\"Navigation_nav__list__txgIa\",\"nav__item\":\"Navigation_nav__item__3YlK4\",\"active-link\":\"Navigation_active-link__9RUZw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm__input\":\"SearchBar_searchForm__input___kDnT\",\"searchForm__button\":\"SearchBar_searchForm__button__2NulR\"};"],"sourceRoot":""}